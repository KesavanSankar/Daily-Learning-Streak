WITH EMI_DETAILS AS (
            SELECT DISTINCT AGREEMENT_NUMBER, LAST_EMI_PAYMENT_DATE, REGION, ACCOUNT_MOBILIZATION, PAYMENT_COMPLETION_DATE,
                   EMI_AMOUNT, TOTAL_PAYMENT_FOR_MONTH, CURRENT_EMI_DEMAND_AMOUNT,
                   ROW_NUMBER() OVER(PARTITION BY AGREEMENT_NUMBER ORDER BY PAYMENT_COMPLETION_DATE DESC) AS ROW_NUMBER,
                   CASE 
                       WHEN TOTAL_PAYMENT_FOR_MONTH >= CURRENT_EMI_DEMAND_AMOUNT THEN 'EMI_PAID' 
                       WHEN TOTAL_PAYMENT_FOR_MONTH <= 500 THEN 'EMI_NOT_PAID' 
                       ELSE 'EMI_PAID' 
                   END AS PAYMENT_STATUS
            FROM (
                SELECT DISTINCT AGREEMENT_NUMBER, LAST_EMI_PAYMENT_DATE, SUBSTR(AGREEMENT_NUMBER, 1, 2) AS REGION, 
                                ACCOUNT_MOBILIZATION, EMI_AMOUNT, TOTAL_PAYMENT_FOR_MONTH, TOTAL_RECEIPTS, 
                                PAYMENT_COMPLETION_DATE, CURRENT_EMI_DEMAND_AMOUNT
                FROM (
                    SELECT CURRENT.AGREEMENT_NUMBER, ACCOUNT_MOBILIZATION, CURRENT.MONTHLY_CUT_DATE, 
                           CURRENT.EMI_STATUS, CURRENT.CURRENT_EMI_DEMAND_AMOUNT, TRANSACTIONS.EMI_AMOUNT,
                           SUM(TRANSACTIONS.RECEIPT_AMOUNT) OVER(PARTITION BY ACCOUNT_MOBILIZATION, CURRENT.AGREEMENT_NUMBER) 
                           AS TOTAL_PAYMENT_FOR_MONTH,
                           CASE 
                               WHEN SUM(TRANSACTIONS.RECEIPT_AMOUNT) OVER(PARTITION BY ACCOUNT_MOBILIZATION, CURRENT.AGREEMENT_NUMBER) 
                               >= EMI_AMOUNT AND EMI_AMOUNT != 0 
                               THEN TRANSACTIONS.AUTHORIZED_DATE 
                               ELSE NULL 
                           END AS PAYMENT_COMPLETION_DATE,
                           SUM(TRANSACTIONS.RECEIPT_AMOUNT) OVER(PARTITION BY ACCOUNT_MOBILIZATION, CURRENT.AGREEMENT_NUMBER) 
                           AS TOTAL_RECEIPTS,
                           ROW_NUMBER() OVER(PARTITION BY ACCOUNT_MOBILIZATION, CURRENT.AGREEMENT_NUMBER 
                                             ORDER BY TRANSACTIONS.AUTHORIZED_DATE, ACCOUNT_MOBILIZATION) AS ROW_NUMBER,
                           MAX(COALESCE(TRANSACTIONS.AUTHORIZED_DATE, TO_DATE(ADD_MONTHS(SYSDATE, -1), 'DD-MON-YY'))) 
                           OVER (PARTITION BY ACCOUNT_MOBILIZATION, CURRENT.AGREEMENT_NUMBER) AS LAST_EMI_PAYMENT_DATE
                    FROM (
                        SELECT *
                        FROM EMI_STATUS_TABLE CURRENT
                        WHERE SUBSTR(AGREEMENT_NUMBER, 7, 2) IN ('CT', 'UT', 'CP')
                          AND (EMI_STATUS IN ('BOUNCED', 'CLEARED', 'NOT_COLLECTED') 
                               OR (EMI_STATUS = 'HOLD' AND TRIM(UPPER(REASON_FOR_BOUNCE)) = 'CASH COLLECTED')
                               OR (EMI_STATUS = 'HOLD' AND TRIM(UPPER(REASON_FOR_BOUNCE)) = 'ADVANCE EMI RECEIVED'))
                    ) CURRENT
                    LEFT JOIN RECEIPTS_TABLE TRANSACTIONS
                    ON CURRENT.AGREEMENT_NUMBER = TRANSACTIONS.AGREEMENT_NUMBER
                       AND TRUNC(CURRENT.MONTHLY_CUT_DATE, 'MONTH') = TRUNC(TRANSACTIONS.AUTHORIZED_DATE, 'MONTH')
                    WHERE CURRENT.MONTHLY_CUT_DATE = TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'DD-MON-YYYY')
                      AND SUBSTR(CURRENT.AGREEMENT_NUMBER, 7, 2) IN ('CT', 'UT', 'CP')
                      AND ACCOUNT_MOBILIZATION IN (1, 2, 3)
                )
                WHERE LAST_EMI_PAYMENT_DATE >= TO_DATE('{current_date.strftime('%d-%b-%Y')}', 'DD-MON-YYYY')
                  AND EMI_STATUS = 'BOUNCED'
            ) A
            WHERE EMI_AMOUNT != 0
        )
        SELECT * FROM EMI_DETAILS
        WHERE PAYMENT_STATUS = 'EMI_NOT_PAID' 
        """
